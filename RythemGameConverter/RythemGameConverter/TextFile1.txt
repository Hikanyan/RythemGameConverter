譜面データ行
各行は「ヘッダ部、 : 、 データ部」という構成をとる。
データ部は 2 桁で 1 セットであり、セット数で小節を分割し、それぞれのタイミングとする。
例えば 11111111 と指定した場合、 4 分間隔で配置される。
最大分割数はアプリケーションごとに異なるが、少なくとも 512 分割(データ部 1024byte)をサポートするべきである。
2 桁のデータについて、 1 桁目はデータ種類ごとに異なるが、 0 は常に無配置である。
2 桁目は常にノーツの幅を表し、同様に 1 〜 z で 1 幅 〜 35 幅を表す。
よって、ノーツの存在しない位置については 00 で埋めるべきである。

#mmm02 小節長
その小節番号以降の小節長を拍数で指定する。
#00002: 4

#BPMzz, #mmm08 BPM 定義・変化
その地点以降のテンポを BPM 定義から参照して指定する。
テンポの値は小数値が指定可能。
#BPM01: 140.0
#00008: 01

#mmm1x タップ
位置が移動しない単押しのノーツ。
仕様として予約されているのは以下の 3 つである。
1? タップ 1
2? タップ 2
3? タップ 3
4? タップ 4
5? タップ 5
6? タップ 6
#00010: 2414141434141414

#mmm2xy ホールド
位置が移動しない長押しのノーツ。
全ての点において同じ幅を指定しなければならない。
チャンネルが同じもの同士が連結する。
1? 開始点
2? 終了点
3? 中継点
#00020a: 14002400

#mmm3xy スライド 1
位置が移動する長押しのノーツ。
各点ごとに異なる幅を設定可能。
ベジエ曲線によってなめらかに形状を設定することができる。
曲線の形状については、各中継点と制御点のノーツの中心を結んだ連続する線分によって定義される。
チャンネルが同じもの同士が連結する。
1? 開始点
2? 終了点
3? 中継点
4? ベジエ曲線制御点
5? 不可視中継点
#00030a: 14340024

#mmm4xy スライド 2
位置が移動する長押しのノーツ。
基本的な仕様はスライド 1 と同等なので省略。

#mmm5x ディレクショナル
方向のあるノーツ定義。
必ずしも他のノーツの上に重ねる必要はなく、単独で配置することも可能である。
1? 上
2? 下
3? 左上
4? 右上
5? 左下
6? 右下
#00050: 14241424

ticks_per_beat 拍あたりの tick 数の変更
#REQUEST "ticks_per_beat <整数>
譜面で n 分音符を使用する場合、小節拍数 * tick 数 の約数になるように指定するべきである。


譜面データはヘッダ部とデータ部からなります。データ部は2桁のセットであり、セット数によって小節が分割されます。セットの1桁目はデータの種類を表し、0は無配置を意味します。2桁目はノーツの幅を示し、1から35の範囲で表されます。存在しない位置には00が使用されます。

いくつかのデータタイプが定義されています：

#mmm02: 小節長を指定します。その小節番号以降の小節の長さを拍数で表現します。
#BPMzz: テンポの定義や変化を指定します。BPM値を参照してテンポを指定します。
#mmm1x: タップノーツを指定します。位置が移動せず、単押しのノーツです。
#mmm2xy: ホールドノーツを指定します。位置が移動せず、長押しのノーツです。開始点、終了点、中継点があります。
#mmm3xy: スライド1を指定します。位置が移動する長押しのノーツで、各点ごとに異なる幅を設定できます。ベジエ曲線によって形状を設定することも可能です。
#mmm4xy: スライド2を指定します。スライド1と基本的な仕様は同じです。
#mmm5x: ディレクショナルノーツを指定します。方向があるノーツで、他のノーツの上に重ねる必要はありません。
また、"ticks_per_beat"という指定があり、この値を変更することで拍あたりのtick数を調整することができます。

「#mmm1x」mは小節番号です。xは横の列です。1はタップノーツを示します。
#00002: 4
#BPM01: 120
#00008: 01
#00110: 14

左側から見る
#を見た後次の文字が0だったら


改行で見る？